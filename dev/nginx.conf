events {
  worker_connections 512;
}

http {
  server {
    listen 80;

# auth/users

    location /api/auth/token-valid {
      if ($request_method = OPTIONS) {
        add_header "Access-Control-Allow-Origin" *;
        add_header "Access-Control-Allow-Methods" "GET, POST, PUT, DELETE, OPTIONS";
        add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
        return 204;
      }

      # Was experiencing same issue as mentioned in this
      # GH issue: https://github.com/bitly/oauth2_proxy/issues/442.
      # Target server was hanging and errors were somewhat
      # cryptic (internal node modules). This clears content
      # length header and does not forward request body, if any.
      # Target server no longer hangs on auth_request
      proxy_pass_request_body off;
      proxy_set_header Content-Length "";

      proxy_pass http://174.138.117.84:3005/api/token-valid;
    }

    location /api/auth/login {
      if ($request_method = OPTIONS) {
        add_header "Access-Control-Allow-Origin" *;
        add_header "Access-Control-Allow-Methods" "GET, POST, PUT, DELETE, OPTIONS";
        add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
        return 204;
      }

      # Was experiencing same issue as mentioned in this
      # GH issue: https://github.com/bitly/oauth2_proxy/issues/442.
      # Target server was hanging and errors were somewhat
      # cryptic (internal node modules). This clears content
      # length header and does not forward request body, if any.
      # Target server no longer hangs on auth_request
      proxy_pass_request_body off;
      proxy_set_header Content-Length "";
      proxy_pass http://174.138.117.84:3005/api/login;
    }

    location /api/users/change-password {
      if ($request_method = OPTIONS) {
        add_header "Access-Control-Allow-Origin" *;
        add_header "Access-Control-Allow-Methods" "GET, POST, PUT, DELETE, OPTIONS";
        add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
        return 204;
      }
      proxy_pass http://174.138.117.84:3005/api/change-password;
    }

    location /api/users/update-preferences {
      if ($request_method = OPTIONS) {
        add_header "Access-Control-Allow-Origin" *;
        add_header "Access-Control-Allow-Methods" "GET, POST, PUT, DELETE, OPTIONS";
        add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
        return 204;
      }
      proxy_pass http://174.138.117.84:3005/api/change-password;
    }

# images

    location /api/images/upload {
      if ($request_method = OPTIONS) {
        add_header "Access-Control-Allow-Origin" *;
        add_header "Access-Control-Allow-Methods" "GET, POST, PUT, DELETE, OPTIONS";
        add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
        return 204;
      }

      auth_request /api/auth/token-valid;

      proxy_pass http://174.138.116.100:3010;
    }

    location /api/images {
      proxy_pass http://174.138.116.100:3010;
    }

# posts/post types

    location ~ "/api/posts/([0-9a-z]+)" {
      if ($request_method = OPTIONS) {
        add_header "Access-Control-Allow-Origin" *;
        add_header "Access-Control-Allow-Methods" "GET, POST, PUT, DELETE, OPTIONS";
        add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
        return 204;
      }
      if ($request_method = PUT) {
        rewrite ^/api/posts/(.*) /_api/posts/$1 last;
      }

      if ($request_method = DELETE) {
        rewrite ^/api/posts/(.*) /_api/posts/$1 last;
      }

      return 405;
    }

    location /api/posts {
      if ($request_method = OPTIONS) {
        add_header "Access-Control-Allow-Origin" *;
        add_header "Access-Control-Allow-Methods" "GET, POST, PUT, DELETE, OPTIONS";
        add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
        return 204;
      }
      if ($request_method = POST) {
        rewrite ^/api/posts /_api/posts last;
      }

      proxy_pass http://165.227.255.40:3015/api/posts;
    }

    location ~ "/api/post-types/([0-9a-z]+)" {
      if ($request_method = OPTIONS) {
        add_header "Access-Control-Allow-Origin" *;
        add_header "Access-Control-Allow-Methods" "GET, POST, PUT, DELETE, OPTIONS";
        add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
        return 204;
      }
      if ($request_method = PUT) {
        rewrite ^/api/post-types/(.*) /_api/post-types/$1 last;
      }

      if ($request_method = DELETE) {
        rewrite ^/api/post-types/(.*) /_api/post-types/$1 last;
      }

      return 405;
    }

    location /api/post-types {
      if ($request_method = OPTIONS) {
        add_header "Access-Control-Allow-Origin" *;
        add_header "Access-Control-Allow-Methods" "GET, POST, PUT, DELETE, OPTIONS";
        add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
        return 204;
      }
      if ($request_method = POST) {
        rewrite ^/api/post-types /_api/post-types last;
      }

      proxy_pass http://165.227.255.40:3015/api/post-types;
    }

    location ~ "/_api/posts/([0-9a-z]+)" {
      # AWS DNS resolver for dynamic proxy_pass below
      resolver 169.254.169.253;

      auth_request /api/auth/token-valid;

      set $proxy_pass_url http://165.227.255.40:3015/api/posts/$1;
      proxy_pass $proxy_pass_url;
    }

    location ~ "/_api/post-types/([0-9a-z]+)" {
      # AWS DNS resolver for dynamic proxy_pass below
      resolver 169.254.169.253;

      auth_request /api/auth/token-valid;

      set $proxy_pass_url http://165.227.255.40:3015/api/post-types/$1;
      proxy_pass $proxy_pass_url;
    }

    location /_api/posts {
      # AWS DNS resolver for dynamic proxy_pass below
      resolver 169.254.169.253;

      auth_request /api/auth/token-valid;

      set $proxy_pass_url http://165.227.255.40:3015/api/posts;
      proxy_pass $proxy_pass_url;
    }

    location /_api/post-types {
      # AWS DNS resolver for dynamic proxy_pass below
      resolver 169.254.169.253;

      auth_request /api/auth/token-valid;

      set $proxy_pass_url http://165.227.255.40:3015/api/post-types;
      proxy_pass $proxy_pass_url;
    }

    location / {
      return 200 'jr-site-api';
    }
  }
}
